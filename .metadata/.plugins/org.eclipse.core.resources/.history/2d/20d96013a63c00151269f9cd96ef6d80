
public class Six {
	int count = 0;//计算最终出列的人数
	/*
	 * 约瑟夫环
	 * n:总人数
	 * m:第m个出列
	 * k:第k个开始
	 */
	public void getNum(int n, int m,int k)
	{
		int p = 0; //用于计算有多少个非0的数
		int i = k-1;
		int[] arr = new int[n];
		for(int j = 0; j < n ; j++)
		{
			arr[j] = j+1;
		}
		while ((n-count)>(m-1))
		{
			for(; p<m ;)
			{
				if(i > n-1)
				{
					i = 0;
				}
				if(arr[i] != 0)
				{
					p++;
					i++;					
				}
				else{
					i++;
				}
			}
			arr[i] = 0;
			System.out.println(i-1);
			count++;
			p = 0;
			/*
				//先判断数组的下标
				if( (n-k+1) >= m)
				{
					i = k + m -2;
					arr[i] = 0;
					count++;
					i++;
				}
				else 
				{
					i = m - n + k -2;
					arr[i] = 0;
					count++;
					i++;
				}
				
			}
			if(p < m)
			{				
				if(arr[i] != 0)
				{			
					p++;
				}
			}
			else
			{
				
			}
			else
			{
				
			}*/
		}
		for(int q = 0 ; q<n; q++)
		{
			if(arr[q] == 0)
			{
				System.out.println(q+1);
			}
		}
		System.out.println(count);
		/*
		for(int i = k ; i < n ; i++)
		{
			if( (n-k+1) >= m)
			{
				arr[i ] = 0;
			}
			else 
			{
				i = m - n + k -2;
			}*/
		}
	
}
